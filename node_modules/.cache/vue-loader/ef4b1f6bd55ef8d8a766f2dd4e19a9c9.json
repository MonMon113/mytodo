{"remainingRequest":"/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ngocptm/hello/todo/todo-vue/src/components/CreateTodo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ngocptm/hello/todo/todo-vue/src/components/CreateTodo.vue","mtime":1555904827362},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      titleText: '',\n      projectText: '',\n      isCreating: false,\n    };\n  },\n  methods: {\n    openForm() {\n      this.isCreating = true;\n    },\n    closeForm() {\n      this.isCreating = false;\n    },\n    sendForm() {\n      if (this.titleText.length > 0 && this.projectText.length > 0) {\n        const title = this.titleText;\n        const project = this.projectText;\n        this.$emit('create-todo', {\n          title,\n          project,\n          done: false,\n        });\n        this.titleText = '';\n        this.projectText = '';\n        this.isCreating = false;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["CreateTodo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateTodo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class='ui basic content center aligned segment'>\n    <button class='ui basic button icon' v-on:click=\"openForm\" v-show=\"!isCreating\">\n      <i class='plus icon'></i>\n    </button>\n    <div class='ui centered card' v-show=\"isCreating\">\n      <div class='content'>\n        <div class='ui form'>\n          <div class='field'>\n            <label>Title</label>\n            <input v-model=\"titleText\" type='text'>\n          </div>\n          <div class='field'>\n            <label>Project</label>\n            <input v-model=\"projectText\" type='text'>\n          </div>\n          <div class='ui two button attached buttons'>\n            <button class='ui basic blue button' v-on:click=\"sendForm()\">\n              Create\n            </button>\n            <button class='ui basic red button' v-on:click=\"closeForm\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      titleText: '',\n      projectText: '',\n      isCreating: false,\n    };\n  },\n  methods: {\n    openForm() {\n      this.isCreating = true;\n    },\n    closeForm() {\n      this.isCreating = false;\n    },\n    sendForm() {\n      if (this.titleText.length > 0 && this.projectText.length > 0) {\n        const title = this.titleText;\n        const project = this.projectText;\n        this.$emit('create-todo', {\n          title,\n          project,\n          done: false,\n        });\n        this.titleText = '';\n        this.projectText = '';\n        this.isCreating = false;\n      }\n    },\n  },\n};\n</script>"]}]}