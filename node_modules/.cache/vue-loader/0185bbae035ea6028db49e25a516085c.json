{"remainingRequest":"/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ngocptm/hello/todo/todo-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ngocptm/hello/todo/todo-vue/src/components/Todo.vue?vue&type=template&id=ee48fd14&","dependencies":[{"path":"/home/ngocptm/hello/todo/todo-vue/src/components/Todo.vue","mtime":1555915383670},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/todo/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"ui centered card\" }, [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: !_vm.isEditing,\n            expression: \"!isEditing\"\n          }\n        ],\n        staticClass: \"content\"\n      },\n      [\n        _c(\"div\", { staticClass: \"header\" }, [\n          _vm._v(\"\\n        \" + _vm._s(_vm.todo.title) + \"\\n    \")\n        ]),\n        _c(\"div\", { staticClass: \"meta\" }, [\n          _vm._v(\"\\n        \" + _vm._s(_vm.todo.project) + \"\\n    \")\n        ]),\n        _c(\"div\", { staticClass: \"extra content\" }, [\n          _c(\n            \"span\",\n            {\n              staticClass: \"right floated edit icon\",\n              on: { click: _vm.showForm }\n            },\n            [_c(\"i\", { staticClass: \"edit icon\" })]\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"right floated trash icon\",\n              on: {\n                click: function($event) {\n                  return _vm.deleteTodo(_vm.todo)\n                }\n              }\n            },\n            [_c(\"i\", { staticClass: \"trash icon\" })]\n          )\n        ])\n      ]\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.isEditing,\n            expression: \"isEditing\"\n          }\n        ],\n        staticClass: \"content\"\n      },\n      [\n        _c(\"div\", { staticClass: \"ui form\" }, [\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", [_vm._v(\"Title\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.todo.title,\n                  expression: \"todo.title\"\n                }\n              ],\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.todo.title },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.todo, \"title\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", [_vm._v(\"Project\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.todo.project,\n                  expression: \"todo.project\"\n                }\n              ],\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.todo.project },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.todo, \"project\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"ui two button attached buttons\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"ui basic blue button\",\n                on: { click: _vm.hideForm }\n              },\n              [_vm._v(\"\\n          Done\\n        \")]\n            )\n          ])\n        ])\n      ]\n    ),\n    _vm.todo.done === true\n      ? _c(\"div\", { staticClass: \"ui bottom attached green basic button\" }, [\n          _c(\"input\", {\n            attrs: { type: \"checkbox\", checked: \"\" },\n            on: {\n              click: function($event) {\n                return _vm.uncompleteTodo(_vm.todo)\n              }\n            }\n          }),\n          _vm._v(\"\\n      Completed\\n  \")\n        ])\n      : _c(\"div\", { staticClass: \"ui bottom attached red basic button\" }, [\n          _c(\"input\", {\n            attrs: { type: \"checkbox\" },\n            on: {\n              click: function($event) {\n                return _vm.completeTodo(_vm.todo)\n              }\n            }\n          }),\n          _vm._v(\"\\n      Pending\\n  \")\n        ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}