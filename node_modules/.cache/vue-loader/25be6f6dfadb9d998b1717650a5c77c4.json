{"remainingRequest":"/home/ngocptm/hello/mytodo/mytodo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ngocptm/hello/mytodo/mytodo/src/components/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ngocptm/hello/mytodo/mytodo/src/components/Todo.vue","mtime":1555915383670},{"path":"/home/ngocptm/hello/mytodo/mytodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/mytodo/mytodo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ngocptm/hello/mytodo/mytodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ngocptm/hello/mytodo/mytodo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['todo'],\n  data() {\n    return {\n      isEditing: false,\n    };\n  },\n  methods: {\n    completeTodo(todo) {\n      this.$emit('complete-todo', todo);\n    },\n    deleteTodo(todo) {\n      this.$emit('delete-todo', todo);\n    },\n    showForm() {\n      this.isEditing = true;\n    },\n    hideForm() {\n      this.isEditing = false;\n    },\n    completeTodo(todo) {\n      this.$emit('complete-todo', todo);\n    },\n    uncompleteTodo(todo) {\n      this.$emit('uncomplete-todo', todo);\n    },\n  },\n};\n",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class='ui centered card'>\n    <div class=\"content\" v-show=\"!isEditing\">\n      <div class='header'>\n          {{ todo.title }}\n      </div>\n      <div class='meta'>\n          {{ todo.project }}\n      </div>\n      <div class='extra content'>\n          <span class='right floated edit icon' v-on:click=\"showForm\">\n          <i class='edit icon'></i>\n        </span>\n        <span class='right floated trash icon' v-on:click=\"deleteTodo(todo)\">\n          <i class='trash icon'></i>\n        </span>\n      </div>\n    </div>\n    <div class=\"content\" v-show=\"isEditing\">\n      <div class='ui form'>\n        <div class='field'>\n          <label>Title</label>\n          <input type='text' v-model=\"todo.title\" >\n        </div>\n        <div class='field'>\n          <label>Project</label>\n          <input type='text' v-model=\"todo.project\" >\n        </div>\n        <div class='ui two button attached buttons'>\n          <button class='ui basic blue button' v-on:click=\"hideForm\">\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class='ui bottom attached green basic button'  v-if=\"todo.done === true\" >\n      <input type=\"checkbox\" @click=\"uncompleteTodo(todo)\" checked>\n        Completed\n    </div>\n    <div class='ui bottom attached red basic button' v-else>\n      <input type=\"checkbox\" @click=\"completeTodo(todo)\">\n        Pending\n    </div>\n  </div>\n</template>\n\n<script type=\"text/javascript\">\n  export default {\n    props: ['todo'],\n    data() {\n      return {\n        isEditing: false,\n      };\n    },\n    methods: {\n      completeTodo(todo) {\n        this.$emit('complete-todo', todo);\n      },\n      deleteTodo(todo) {\n        this.$emit('delete-todo', todo);\n      },\n      showForm() {\n        this.isEditing = true;\n      },\n      hideForm() {\n        this.isEditing = false;\n      },\n      completeTodo(todo) {\n        this.$emit('complete-todo', todo);\n      },\n      uncompleteTodo(todo) {\n        this.$emit('uncomplete-todo', todo);\n      },\n    },\n  };\n</script>"]}]}